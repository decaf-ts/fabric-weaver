{
  "name": "@decaf-ts/fabric-weaver",
  "version": "0.0.8",
  "description": "template for ts projects",
  "type": "module",
  "bin": {
    "weaver": "./lib/core/cli.cjs"
  },
  "exports": {
    "require": "./lib/index.cjs",
    "import": "./lib/esm/index.js"
  },
  "types": "lib/index.d.ts",
  "scripts": {
    "do-install": "TOKEN=$(cat .token) npm install",
    "update-scripts": "node ./bin/update-scripts.cjs",
    "set-git-auth": "git config url.\"https://api:$(cat .token)@github.com/\".insteadOf \"https://github.com/\" && git config url.\"https://ssh:$(cat .token)@github.com/\".insteadOf \"ssh://git@github.com/\" && git config url.\"https://git:$(cat .token)@github.com/\".insteadOf \"git@github.com:\"",
    "flash-forward": "npx npm-check-updates -u && npm run do-install",
    "reset": "rm -rf * && git checkout . && git pull && npm run do-install",
    "update-fabric": "./bin/fabric.cjs update",
    "setup": "npm run build && ./bin/fabric.cjs setup",
    "build:weaver": "chmod +x ./lib/core/cli.cjs && node ./bin/she-bang.cjs add-node-shebang --file ./lib/core/cli.cjs",
    "build:bin": "npm run build:weaver",
    "build": "node ./bin/build-scripts.cjs --dev && npm run build:command && npm run build:bin",
    "build:prod": "node ./bin/build-scripts.cjs --prod && npm run build:command && npm run build:bin",
    "build:command": "node ./bin/build-scripts-extended.cjs --commands",
    "test": "jest --runInBand --detectOpenHandles",
    "test:unit": "jest --testPathPattern=\"/tests/unit\" --passWithNoTests --detectOpenHandles",
    "test:integration": "jest --testPathPattern=\"/tests/(integration)\" --passWithNoTests --detectOpenHandles",
    "test:all": "jest --testPathPattern=\"/tests\" --passWithNoTests --detectOpenHandles",
    "test:circular": "dpdm -T --no-warning --no-tree ./src/index.ts",
    "coverage": "rimraf ./workdocs/reports/data/*.json && npm run test:all -- --coverage --config=./workdocs/reports/jest.coverage.config.ts",
    "lint": "eslint .",
    "lint-fix": "eslint --fix .",
    "prepare-release": "npm run lint-fix && npm run build:prod && npm run coverage && npm run docs",
    "release": "./bin/tag-release.sh",
    "clean-publish": "npx clean-publish",
    "drawings": "for FILE in workdocs/drawings/*.drawio; do echo \"converting $FILE to image...\" && docker run --rm -v $(pwd):/data rlespinasse/drawio-export --format png $FILE; done && cp -rf workdocs/drawings/export/* workdocs/resources/",
    "uml": "cd workdocs/uml && for FILE in ./*.puml; do docker run --rm -v $(pwd):/work -w /work miy4/plantuml -DPLANTUML_LIMIT_SIZE=8192 -tpng $FILE; done && cd ../.. && cp -fr workdocs/uml/*.png workdocs/resources/",
    "docs": "npx rimraf ./docs && mkdir docs && node ./bin/build-scripts.cjs --docs",
    "basic:up": "cd ./tutorials/manually-generated/basic-tls-infrastructure && ./docker-up.sh",
    "basic:down": "cd ./tutorials/manually-generated/basic-tls-infrastructure && ./docker-down.sh",
    "publish-docs": "docker run -it --rm --user $(id -u):$(id -g) -v \"$(pwd)/workdocs/confluence:/content\" -e ATLASSIAN_API_TOKEN=$(cat .confluence-token) ghcr.io/markdown-confluence/publish:latest",
    "docker:login": "docker login ghcr.io -u $(cat .dockeruser) -p $(cat .dockertoken)",
    "docker:build": "npm run docker:build-base && npm run docker:build-couchdb && npm run docker:build-builder && npm run docker:build-weaver",
    "docker:build-builder": "DOCKER_BUILDKIT=1 docker build --secret id=TOKEN,src=$PWD/.npmtoken -t ghcr.io/decaf-ts/fabric-weaver:builder-2.5.12-$(cat package.json | jq -r '.version') -t ghcr.io/decaf-ts/fabric-weaver:builder-2.5.12-latest --target=builder -f ./Dockerfile-fabric .",
    "docker:build-base": "DOCKER_BUILDKIT=1 docker build --secret id=TOKEN,src=$PWD/.npmtoken -t ghcr.io/decaf-ts/fabric-weaver:base-2.5.12-$(cat package.json | jq -r '.version') -t ghcr.io/decaf-ts/fabric-weaver:base-2.5.12-latest -f ./Dockerfile .",
    "docker:build-couchdb": "docker build -t ghcr.io/decaf-ts/fabric-weaver:couchdb-$(cat package.json | jq -r '.version') -t ghcr.io/decaf-ts/fabric-weaver:couchdb-latest --build-arg COUCHDB_VERSION=${COUCHDB_VERSION:-latest} -f ./Dockerfile-couchdb .",
    "docker:build-weaver": "DOCKER_BUILDKIT=1 docker build --secret id=TOKEN,src=$PWD/.npmtoken -t ghcr.io/decaf-ts/fabric-weaver:weaver-2.5.12-$(cat package.json | jq -r '.version') -t ghcr.io/decaf-ts/fabric-weaver:weaver-2.5.12-latest -f ./Dockerfile-fabric .",
    "docker:publish": "npm run docker:publish-base && docker:publish-couchdb && docker:publish-builder && npm run docker:publish-weaver",
    "docker:publish-couchdb": "docker push ghcr.io/decaf-ts/fabric-weaver:couchdb-$(cat package.json | jq -r '.version') && docker push ghcr.io/decaf-ts/fabric-weaver:couchdb-latest",
    "docker:publish-builder": "docker push ghcr.io/decaf-ts/fabric-weaver:builder-2.5.12-$(cat package.json | jq -r '.version') && docker push ghcr.io/decaf-ts/fabric-weaver:builder-2.5.12-latest",
    "docker:publish-weaver": "docker push ghcr.io/decaf-ts/fabric-weaver:weaver-2.5.12-$(cat package.json | jq -r '.version') && docker push ghcr.io/decaf-ts/fabric-weaver:weaver-2.5.12-latest",
    "docker:publish-base": "docker push ghcr.io/decaf-ts/fabric-weaver:base-2.5.12-$(cat package.json | jq -r '.version') && docker push ghcr.io/fabric-weaver:base-2.5.12-latest"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/decaf-ts/ts-workspace.git"
  },
  "engines": {
    "node": ">=20.0.0",
    "npm": ">=10.0.0"
  },
  "files": [
    "lib",
    "dist"
  ],
  "keywords": [
    "plantuml",
    "mermaid",
    "uml",
    "drawio",
    "mddocs",
    "md",
    "jsdoc",
    "doc",
    "docs",
    "documentation",
    "test",
    "reports",
    "confluence",
    "ci/cd",
    "ci",
    "cd",
    "template",
    "typescript",
    "ts"
  ],
  "author": "PDMFC",
  "bugs": {
    "url": "https://github.com/decaf-ts/ts-workspace/issues"
  },
  "homepage": "https://github.com/decaf-ts/ts-workspace#readme",
  "devDependencies": {
    "@eslint/js": "^9.25.1",
    "@stylistic/eslint-plugin": "^4.2.0",
    "@types/express": "^5.0.3",
    "@types/jest": "^29.5.14",
    "@types/js-yaml": "^4.0.9",
    "axios": "^1.9.0",
    "clean-publish": "^5.1.0",
    "dpdm": "^3.14.0",
    "eslint": "^9.25.1",
    "eslint-config-prettier": "^10.1.2",
    "eslint-plugin-prettier": "^5.2.6",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "jest-html-reporters": "^3.1.7",
    "jest-junit": "^16.0.0",
    "jsdoc": "^4.0.4",
    "jsdoc-mermaid": "^1.0.0",
    "markdown-include": "^0.4.3",
    "minimist": "^1.2.8",
    "nodemon": "^3.1.9",
    "npm-check-updates": "^18.0.0",
    "prettier": "3.5.3",
    "rimraf": "^6.0.1",
    "ts-jest": "^29.3.2",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "typescript-eslint": "^8.31.0"
  },
  "license": "LGPL",
  "dependencies": {
    "@decaf-ts/logging": "^0.2.1",
    "@decaf-ts/utils": "^0.3.4",
    "@rollup/plugin-commonjs": "^28.0.3",
    "@rollup/plugin-json": "^6.1.0",
    "@rollup/plugin-node-resolve": "^16.0.1",
    "@rollup/plugin-replace": "^6.0.2",
    "@rollup/plugin-typescript": "^12.1.2",
    "commander": "^13.1.0",
    "express": "^5.1.0",
    "js-yaml": "^4.1.0",
    "rollup": "^4.40.2",
    "typescript": "^5.8.3"
  }
}
