services:
  org-1:
    container_name: org-1
    hostname: org-1
    image: ghcr.io/decaf-ts/fabric-weaver:weaver-${FABRIC_VERSION:-2.5.12}-${WEAVER_VERSION:-latest}
    restart: no
    ports:
      - "7010:7010"
    healthcheck:
      test: bash -c "[ -f /weaver/server/ca-cert.pem ] && curl -s 127.0.0.1:8010/healthz | grep "OK" || exit 1"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s
    command: >
      node ./weaver/lib/core/cli.cjs docker:boot-ca
        --home /weaver/server
        --port 7010
        --debug
        --bootstrap-user admin:adminpw
        --ca-name org-1
        --operations-address 127.0.0.1:8010
        --metrics-address 127.0.0.1:9010
        --no-tls

  org-2:
    container_name: org-2
    hostname: org-2
    image: ghcr.io/decaf-ts/fabric-weaver:weaver-${FABRIC_VERSION:-2.5.12}-${WEAVER_VERSION:-latest}
    restart: no
    ports:
      - "7011:7011"
    healthcheck:
      test: bash -c "[ -f /weaver/server/ca-cert.pem ] && curl -s 127.0.0.1:8010/healthz | grep "OK" || exit 1"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 30s
    command: >
      node ./weaver/lib/core/cli.cjs docker:boot-ca
        --home /weaver/server
        --port 7010
        --debug
        --bootstrap-user admin:adminpw
        --ca-name org-2
        --operations-address 127.0.0.1:8010
        --metrics-address 127.0.0.1:9010
        --no-tls

  #IT might be possible to instead of using docker exec simply use the orgs volumes and run the client commands directly
  boot-orgs:
    container_name: boot-orgs
    hostname: boot-orgs
    image: ghcr.io/decaf-ts/fabric-weaver:weaver-${FABRIC_VERSION:-2.5.12}-${WEAVER_VERSION:-latest}
    restart: no
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - boot-lock:/boot:rw
    depends_on:
      org-1:
        condition: service_healthy
      org-2:
        condition: service_healthy
    command: >
      bash -c "
      if [ -f /boot/boot-orgs.lock ]; then
        echo 'boot-tls has already run. Exiting.';
        exit 0;
      fi;
      apt-get update &&
      apt-get install -y docker.io &&

      docker exec org-1 node ./weaver/lib/core/cli.cjs docker:client-enroll -d --url 'http://admin:adminpw@org-1:7010' --mspdir '/weaver/client/admin/msp' &&

      docker exec org-2 node ./weaver/lib/core/cli.cjs docker:client-enroll -d --url 'http://admin:adminpw@org-2:7011' --mspdir '/weaver/client/admin/msp' &&

      touch /boot/boot-tls.lock
      "

volumes:
  boot-lock:
    name: boot-lock
